<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns:ui="http://java.sun.com/jsf/facelets"
				xmlns:h="http://java.sun.com/jsf/html"
				xmlns:f="http://java.sun.com/jsf/core"
				xmlns:c="http://java.sun.com/jstl/core"
                template="/WEB-INF/layouts/root.xhtml"
				>

    <ui:define name="content">
		
	    <script type="text/javascript">

	    	function addRequireDecor(id, prompt, fieldType, regExp){

				if (!fieldType) fieldType =  "dijit.form.ValidationTextBox";

	    		Spring.addDecoration(new Spring.ElementDecoration({
					 elementId : id,
					 widgetType : fieldType,
					 widgetAttrs : {
						promptMessage: prompt,
						required : true
					}
				}));
	    	}
	    	function addProceedDecor(id){
	    		Spring.addDecoration(
						 new Spring.ValidateAllDecoration({
						 elementId: id,
						 event:'onclick'}));
	    	}
			function addDecors(){
				addRequireDecor("nickname", "#{msg['error.nickname.empty']}");
				addRequireDecor("email", "Enter Email");
				addRequireDecor("password", "Password is required");
				addRequireDecor("password_confirm", "Confirm the password");
				addProceedDecor("proceed");
			}
			//dojo.addOnLoad(addDecors);

		</script>
			
		<form id="user" dojoType="dijit.form.Form" class="register" action="#{facesContext.externalContext.requestContextPath}/register" method="post">
		<table>
			<tr>
				<td><h:outputLabel for="nickname"><h:outputText value="#{msg['register.index.nickname']}" /></h:outputLabel></td>
				<td><h:inputText  id="nickname" value="#{user.nickname}" required="true"/></td>
				<td><ui:repeat value="#{userErrors['nickname']}" var="err">
						<h:outputText value="#{msg[err]}" />
					</ui:repeat>
				</td>
			</tr>
			<tr>
				<td><h:outputLabel for="email"><h:outputText value="#{msg['register.index.email']}"/></h:outputLabel></td>
				<td><h:inputText  id="email" value="#{user.email}" required="true"/></td>
				<td><ui:repeat value="#{userErrors['email']}" var="err">
						<h:outputFormat value="#{msg[err]}" escape="false"><f:param value="#{facesContext.externalContext.requestContextPath}" /></h:outputFormat>
					</ui:repeat>
				</td>
			</tr>
			<tr>
				<td><h:outputLabel for="password"><h:outputText value="#{msg['register.index.password']}"/></h:outputLabel></td>
				<td><h:inputSecret redisplay="false" id="password" value="#{user.password}" required="true"/></td>
				<td><ui:repeat value="#{userErrors['password']}" var="err">
						<h:outputText value="#{msg[err]}" />
					</ui:repeat>
				</td>
			</tr>
			<tr>
				<td>
					<h:outputLabel for="select_country">
						<h:outputText value="#{msg['register.index.location']}" />
					</h:outputLabel>
				</td>
				<td>

					<h:selectOneMenu id="country_select" value="">
						<f:selectItems value="#{countries.all}"/>
					</h:selectOneMenu>
					<br />

					<h:selectOneMenu id="area_select" value="">
						
					</h:selectOneMenu>
					<br />

					<h:selectOneMenu id="city_select" value="">

					</h:selectOneMenu>

					<script type="text/javascript">/* <![CDATA[ */

						dojo.require("dijit.form.Form");
						dojo.require("dijit.form.FilteringSelect");
						dojo.require("dojo.data.ItemFileReadStore");
						dojo.require("dijit.form.ValidationTextBox");

						var areaStore = new dojo.data.ItemFileReadStore({
							url: "#{facesContext.externalContext.requestContextPath}/ajax/countries/get_areas/?id=62",
							clearOnClose: true,
							urlPreventCache: true
						});

						var cityStore = new dojo.data.ItemFileReadStore({
							url: "#{facesContext.externalContext.requestContextPath}/ajax/countries/get_cities/?area=62",
							clearOnClose: true,
							urlPreventCache: true
						});

						dojo.addOnLoad(function() {
							
							new dijit.form.ValidationTextBox({
								id: "email",
								required: true,
								trim: true,
								regExp: "[a-zA-Z0-9._%-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}"
							}, "email");
							
							new dijit.form.ValidationTextBox({
								id: "nickname",
								required: true,
								trim: true
							}, "nickname");

							new dijit.form.ValidationTextBox({
								id: "password",
								required: true
							}, "password");

							var citySelect = new dijit.form.FilteringSelect({
								id: "city_select",
								store: cityStore,
								searchAttr: "label",
								required: true,
								onFocus: function() {
									if (dijit.byId(this.id).value == '') {
										dijit.byId(this.id).setDisplayedValue('');
									}
								}
							}, "city_select");

							var areaSelect = new dijit.form.FilteringSelect({
								id: "area_select",
								store: areaStore,
								searchAttr: "label",
								required: true,
								onFocus: function() {
									if (dijit.byId(this.id).value == '') {
										dijit.byId(this.id).setDisplayedValue('');
									}
								},
								onChange: function(areaId) {
									if (areaId && (parseInt(areaId) > 0)) {
										cityStore.close();
										cityStore._jsonFileUrl = "#{facesContext.externalContext.requestContextPath}/ajax/countries/get_cities/?area="+areaId;
										cityStore.fetch();
										dijit.byId("city_select").setDisplayedValue("#{msg['select.city']}");
									}
								}
							}, "area_select");

							var countrySelect = new dijit.form.FilteringSelect({
								id: "country_select",
								required: true,
								onChange: function(countryId) {
									areaStore.close();
									areaStore._jsonFileUrl = "#{facesContext.externalContext.requestContextPath}/ajax/countries/get_areas/?id="+countryId;
									areaStore.fetch();
									dijit.byId("area_select").setDisplayedValue("#{msg['select.area']}");
								},
								displayedValue: "#{msg['select.country']}"
							}, "country_select");

							function validateFilteringSelect(id) {
								var select = dijit.byId(id);
								if (!select.value) {
									select.displayMessage('Empty');
									return false;
								}
								return true;
							}

							dijit.byId("user").onSubmit = function() {

								var valid = true;
								
								if (!validateFilteringSelect("country_select")) return false;
								if (!validateFilteringSelect("area_select")) return false;
								if (!validateFilteringSelect("city_select")) return false;

								if (!dijit.byId("user").validate()) {
									valid = false;
								}
								
								if (valid) {
									dojo.forEach(dijit.byId("user").getDescendants(), function(widget) {
										var field  = dojo.doc.createElement("input");
										field.type = 'hidden';
										field.name = widget.id;
										field.value = widget.value;
										dojo.byId("user").appendChild(field);
									});
								}
								
								return valid;
							}

						});

						/* ]]> */
					</script>

				</td>
				<td><ui:repeat value="#{userErrors['homecity']}" var="err">
						<h:outputText value="#{msg[err]}" />
					</ui:repeat>
				</td>
			</tr>
			<tr>
				<td></td>
				<td colspan="2">
					<h:selectBooleanCheckbox id="playin" />
					<h:outputLabel for="playin" style="display: inline; text-align: left; width: auto;">
						<h:outputText value="#{msg['register.index.also_playin']}" />
					</h:outputLabel>
				</td>
			</tr>
			<tr>
				<td></td>
				<td colspan="2">
					<h:selectBooleanCheckbox id="promotin" />
					<h:outputLabel for="promotin" style="display: inline; text-align: left; width: auto;">
						<h:outputText value="#{msg['register.index.also_promotin']}" />
					</h:outputLabel>
				</td>
			</tr>
			<tr>
				<td></td>
				<td colspan="2"><br /><h:commandButton id="proceed" value="#{msg['register.index.submit']}" image="/resources/resources/images/btn_next.png" /></td>
			</tr>
		</table>
		</form>

    </ui:define>

</ui:composition>
